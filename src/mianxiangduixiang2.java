public class mianxiangduixiang2 {
    public static void main(String[] args) {
        //封装：告诉我们，如何正确设计对象的属性和方法
        //对象代表什么，就得封装对应的数据，并提供数据对应的行为
        //好处：1.让编程变简单，有什么事找对象。2.降低学习成本


        //成员变量：定义在方法外面，类的里面
        //局部变量：定义在方法里面
        //当成员变量名 == 局部变量名，则会触发就近原则
        //就近原则：谁离我近，我就用谁
        /*public class GirlFriend {
            private int age;
            public void method(){
                int age = 10;
                System.out.println(age);
            }
          }
          例如这个例子，局部变量离着近，则打印10。若不想用局部变量的值，则在输出语句中改为this.age即可。
         */
        //this作用：区分成员变量和局部变量。本质：代表方法调用者的地址值。




        /*构造方法
        也叫构造器、构造函数
        作用：在创建对象的时候给成员变量进行初始化的（赋值）。

        构造方法的重载：
        带参构造方法和无参数构造方法，两者方法名相同，但参数不同

        推荐使用方式：
        无论是否使用，都手动书写无参数构造方法，和带全部参数的构造方法

        格式：
        public class 方法名{
            修饰符 类名(参数){
                方法体;
            }
        }

        特点：
        1.方法名与类名相同，大小写也要一致
        2.没有返回值类型，连void都没有
        3.没有具体的返回值(不能由retrun带回结果数据)

        注意：
        如果我们自己没有写任何的构造方法，虚拟机会给我们加一个空参构造方法。
        如果定义了构造方法，系统将不再提供默认的构造方法

        如果不知道参数，而是键盘录入参数，则用空参构造方法

        创建对象的时候，虚拟机对自动调用构造方法，作用是给成员变量进行初始化的
         */
    }
}
